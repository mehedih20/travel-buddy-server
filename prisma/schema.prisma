// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String               @id @default(uuid())
  name               String
  email              String               @unique
  password           String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  trip               Trip[]
  travelBuddyRequest TravelBuddyRequest[]
  userProfile        UserProfile?

  @@map("users")
}

model Trip {
  id          String   @id @default(uuid())
  userId      String
  destination String
  startDate   String
  endDate     String
  budget      Int
  activities  String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user               User                 @relation(fields: [userId], references: [id])
  travelBuddyRequest TravelBuddyRequest[]

  @@map("trips")
}

model TravelBuddyRequest {
  id        String   @id @default(uuid())
  tripId    String
  userId    String
  status    String   @default("PENDING")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  trip Trip @relation(fields: [tripId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@map("travelBuddyRequests")
}

model UserProfile {
  id        String   @id @default(uuid())
  userId    String   @unique
  bio       String
  age       Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(references: [id], fields: [userId])

  @@map("userProfiles")
}
